@POST
    @Path("/update")
    @Consumes(APPLICATION_FORM_URLENCODED)
    @Produces(APPLICATION_JSON + "; charset=UTF-8")
    //public Map<String, Object> getNetwork_Traffic_Update(MultivaluedMap<String, String> formParams) throws Exception {
    public Map<String, Object> getNetwork_Traffic_Update(@FormParam("s_package") String s_package,
                                                         @FormParam("s_rateplan") String s_rateplan,
                                                         @FormParam("s_type") String s_type,
                                                         @FormParam("s_fee") String s_fee) {
        log.debug("-------getNetwork_Traffic_Update start-------");
        Map<String, Object> returnMap = new HashMap<>();
        String rtMessage = "";
        String rtContent = "";
        String rtService = "";
        UserProfileBean profileBean = ssoService.getProfile(req);
        String msisdn = profileBean.getMsisdn();
        String contractId = profileBean.getContractId();

        log.debug("-------msisdn=" + msisdn + "-------");
        log.debug("-------contractId=" + contractId + "-------");
        log.debug("-------s_package=" + s_package + "-------");
        log.debug("-------s_rateplan=" + s_rateplan + "-------");
        //jsp頁面只能有一個input hidden name="s_fee"才能正確取到值(input redio 取有點選的)
        //若有兩個以上input hidden name="s_fee"，有時會取第一個，有時取不到值
        log.debug("-------s_type=" + s_type + "-------");

        /**/
        String s_Return = null;
        String SERIAL_NO = null;
        String s_Mesg = null;
        // 查詢目前申裝狀態透過SSO取出資料

        log.debug("-------crmservice.getSP_Ins_Cod_4GSR_Update() start-------");
        WsRsInsCod4GSR map1 = null;
        // 5G直接由頁面帶回Fee值
        if (StringUtils.isBlank(s_fee)) s_fee = this.getFee(s_rateplan);
        log.debug("-------s_fee=" + s_fee + "-------");
        if (s_fee != null) {
            log.debug("-------s_fee=" + s_fee + "-------");
            map1 = crmservice.getSP_Ins_Cod_4GSR_Update(s_package, s_rateplan, s_fee, s_type, SERVICE_CODE, profileBean);
        }

        if (map1 != null) {
            s_Return = (String) map1.getSReturn();
            SERIAL_NO = (String) map1.getSERIALNO();
            s_Mesg = (String) map1.getSMesg();

            log.debug("-------s_Return=" + s_Return + "-------");
            log.debug("-------SERIAL_NO=" + SERIAL_NO + "-------");
            log.debug("-------s_Mesg=" + s_Mesg + "-------");
        } else {
            log.debug("-------map1 is null-------");
        }

        if (s_Return != null && s_Return.equalsIgnoreCase("S")) {
            rtMessage = "S";
            rtContent = messageSource.getMessage("transQuanPlug_S_success", null, Locale.getDefault());
            String message;
            if (s_type.equalsIgnoreCase("Upd_Plan")) {
                message = "Upd_Plan";
            } else if (s_type.equalsIgnoreCase("TOPUP")) {
                message = "TOPUP";
            } else if (s_type.equalsIgnoreCase("OTT")) {
                message = "OTT";
            } else {
                message = "";
            }
            log.debug("-------PersonalConstants.Information_message=" + message + "-------");
        } else {
            if ("001".equals(s_Mesg)) {
                rtMessage = "P";
                rtContent = messageSource.getMessage("transQuanPlug_P_processing", null, Locale.getDefault());
            } else {
                rtMessage = "E";
                rtContent = messageSource.getMessage("transQuanPlug_E_error", null, Locale.getDefault());
            }
            log.debug("-------UPP return error message =" + s_Mesg + "-------");
        }

        rtService = messageSource.getMessage("transQuanPlug_service", null, Locale.getDefault());

        log.debug("-------rtMessage=" + rtMessage + "-------");
        log.debug("-------rtContent=" + rtContent + "-------");
        log.debug("-------rtService=" + rtService + "-------");
        log.debug("-------getNetwork_Traffic_Update end-------");

        //return rtMessage;
        returnMap.put("rtMessage", rtMessage);
        returnMap.put("rtContent", rtContent);
        returnMap.put("rtService", rtService);
        return returnMap;

    }
