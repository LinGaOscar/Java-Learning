@GET
    @Path("/info/4G")
    @Produces({APPLICATION_JSON + "; charset=UTF-8"})
    public Map<String, Object> get4GInfo() {
        Map<String, Object> map = new HashMap<>();
        UserProfileBean profileBean = ssoService.getProfile(req);

        // 若為3G 或 wsLteOrder=null 頁面alert 系統忙碌中，頁面不執行foreach
        // 若wslteOrder!=null 則為4G，頁面執行foreach，不論其是否為4G吃到飽
        // canBuy : available 可以加購 | unavailable: 不能加購
        // underPercentage : 傳輸量未答7成
        // overAmount : 加購超過3000元
        String canBuy = "unavailable";
        String companyId = profileBean.getCrmProfile().getPRODUCTTYPE();
        // 非4G,5G月租型
        if (profileBean.getCrmProfile() != null && (!companyId.equals(productType4GPostpay) && !companyId.equals(productType5GPostpay))) {
            map.put("result", "notQuota");
            map.put("canBuy", canBuy);
            map.put("canBuyMes", "");
            return map;
        }

        List<WsUsageInfo> usageInfoList = new ArrayList<>();
        WsLteOrder wsLteOrder = uppservice.getWsLteOrder(profileBean, "UNBILLED_GSNSUM_QUERY"); // 傳輸使用量查詢  (From UPP: 以此為主）
        List<WsUsageInfo> list4GSR = crmservice.getSP_Qry_4GSR(SERVICE_CODE, profileBean); // 傳輸使用量查詢 (From CRM: 不再使用）
        List<WsQry4Gsr> listTopUp4GSR = crmservice.getSP_Qry_TopUp_4GSR(SERVICE_CODE, profileBean); // 加購傳輸量, 至少會回傳size為0的list
        double amount = billService.get4GAmount(profileBean);//取得加價購金額

        WsCustomerProjectInfo customerProjectInfo = billService.getCustomerProjectInfo(profileBean); //取得專案名稱
        String projectName = customerProjectInfo != null ? customerProjectInfo.getProjectName() : "";

        if (wsLteOrder != null) {
            if (wsLteOrder.getQOS().equalsIgnoreCase("THROTTLING_OFF")) {
                //為4G吃到飽
                map.put("result", "notQuota");
                map.put("canBuy", canBuy);
                map.put("canBuyMes", "");
                return map;
            }

            HashMap hm = new HashMap();
            if (wsLteOrder.getUsageInfo() != null && wsLteOrder.getUsageInfo().getWsUsageInfo().size() > 0) {
                List<com.tstar.portal.outbound.cms.upp.WsUsageInfo> list = wsLteOrder.getUsageInfo().getWsUsageInfo();

                usageInfoList = new ArrayList();
                for (int i = 0; i < list.size(); i++) {
                    com.tstar.portal.outbound.cms.upp.WsUsageInfo usageInfo = list.get(i);
                    if (usageInfo.getType().equalsIgnoreCase("Plan") || usageInfo.getType().equalsIgnoreCase("RollOverPlan") || usageInfo.getType().equalsIgnoreCase("TopUp")) {
                        WsUsageInfo wsUsageInfo_tmp = new WsUsageInfo();
                        BeanUtils.copyProperties(usageInfo, wsUsageInfo_tmp);
                        usageInfoList.add(wsUsageInfo_tmp);

                        if (usageInfo.getType().equalsIgnoreCase("TopUp")) {
                            hm.put(usageInfo.getName(), usageInfo.getType());
                        }
                    }
                }

                if (list4GSR != null && list4GSR.size() > 0) {
                    for (int i = 0; i < list4GSR.size(); i++) {
                        WsUsageInfo usageInfo = list4GSR.get(i);
                        // 僅計算Plan＋TopUp部分的傳輸量
                        if (usageInfo.getType().equalsIgnoreCase("Plan") || usageInfo.getType().equalsIgnoreCase("TopUp")) {
                            if (!hm.containsKey(usageInfo.getName())) {
                                usageInfoList.add(usageInfo);
                            }
                        }
                    }
                }

                if (usageInfoList.size() == 0) {
                    map.put("usageInfoList", usageInfoList);
                    //代表客戶可以有加購的資格，可以有目前使用的方案，可以有列出加購的方案
                } else {
                    map.put("usageInfoList", usageInfoList);
                }
            } else {
                map.put("usageInfoList", usageInfoList);
            }

            // 加購傳輸量
            // 如果PCRF回傳無資料, 企網畫面要防呆"不可加購"，且QOS為THROTTLING_ON
            if (wsLteOrder != null && wsLteOrder.getErrorCode().equals("0") && wsLteOrder.getQOS().equalsIgnoreCase("THROTTLING_ON")) {
                //THROTTLING_ON-->不是吃到飽，THROTTLING_OFF-->是吃到飽
                if (listTopUp4GSR != null && listTopUp4GSR.size() > 0) {
                    map.put("listTopUp4GSR", listTopUp4GSR);
                } else {
                    map.put("listTopUp4GSR", listTopUp4GSR);
                }
            } else {
                listTopUp4GSR = new ArrayList<>();
                map.put("listTopUp4GSR", listTopUp4GSR);
            }
            map.put("project_name", projectName);

        } else {
            //flag = true;
            //wsLteOrder = null
            //代表此客戶不能有加購方案，也不能有目前使用的方案，為了要讓頁面不出錯，要回傳size為0的list
            map.put("result", "wsLteOrderIsNull");
            map.put("project_name", projectName);
            map.put("usageInfoList", usageInfoList);
            map.put("listTopUp4GSR", listTopUp4GSR);
            map.put("canBuy", canBuy);
            map.put("canBuyMes", "");
        }

        String limitCriteria = "";

        //查詢使用是否超過7成
        for (WsUsageInfo wsui : usageInfoList) {
            if (Integer.parseInt(wsui.getUsageP()) < 70) {
                //canBuy = "underPercentage";
                limitCriteria = "underPercentage";
            }
        }

        // 是否已購買金額達3000元
        String canBuyMes = "";
        if ("underPercentage".equals(limitCriteria)) {
            canBuy = "underPercentage";
            canBuyMes = messageSource.getMessage("transQuanPlug_buy_underPercentage", null, Locale.getDefault());
        } else {
            if (amount >= 3000) {
                canBuy = "overAmount";
                canBuyMes = messageSource.getMessage("transQuanPlug_buy_overAmount", null, Locale.getDefault());
            } else {
                canBuy = "available";
                canBuyMes = messageSource.getMessage("transQuanPlug_buy_canby", null, Locale.getDefault());//在jsp頁面上用不到
            }
        }

        map.put("project_name", projectName);
        map.put("canBuy", canBuy);
        map.put("canBuyMes", canBuyMes);
        return map;
    }
